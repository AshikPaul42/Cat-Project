{"version":3,"sources":["components/tweet/tweet.js","components/form/form.js","App.js","index.js"],"names":["Tweet","className","this","props","name","content","date","Component","Form","API_URL","loadAllMews","fetch","then","res","json","allmews","setState","allTweets","onSubmit","event","preventDefault","formElements","document","querySelector","formData","FormData","meow","get","created","Date","toDateString","method","body","JSON","stringify","headers","createdMew","console","log","reset","state","type","id","required","onClick","map","tweet","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"uTAiBeA,G,mLAZP,OACI,yBAAKC,UAAU,SACX,+BAAQC,KAAKC,MAAMC,MACnB,6BACA,+BAAQF,KAAKC,MAAME,SACnB,6BACA,+BAAQH,KAAKC,MAAMG,W,GARfC,cC4ELC,E,kDAvEX,WAAYL,GAAO,IAAD,8BACd,cAAMA,IAHVM,QAAU,6CAEQ,EAQlBC,YAAc,WACVC,MAAM,EAAKF,SACNG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACF,EAAKC,SAAS,CACVC,UAAYF,QAbV,EAkBlBG,SAAW,SAACC,GACRA,EAAMC,iBACN,IAAMC,EAAeC,SAASC,cAAc,QACtCC,EAAW,IAAIC,SAASJ,GAIxBK,EAAO,CACTtB,KAJSoB,EAASG,IAAI,QAKtBtB,QAJYmB,EAASG,IAAI,WAKzBC,SAAU,IAAIC,MAAOC,gBAEzBnB,MAAM,EAAKF,QAAS,CAChBsB,OAAQ,OACRC,KAAOC,KAAKC,UAAUR,GACtBS,QAAQ,CACJ,eAAiB,sBAEtBvB,MAAK,SAAAC,GAAG,OAAGA,EAAIC,UACjBF,MAAK,SAAAwB,GACFC,QAAQC,IAAIF,GACZf,EAAakB,QAKb,EAAK7B,kBA1CT,EAAK8B,MAAO,CACRvB,UAAY,IAEhB,EAAKP,cALS,E,qDAiDd,OACA,yBAAKT,UAAU,QACX,8BACI,uCACA,6BACA,2BAAOwC,KAAK,OAAOrC,KAAK,OAAOsC,GAAG,OAAOC,UAAQ,IACjD,6BAAK,6BACL,8CACA,6BACA,8BAAUF,KAAK,OAAOrC,KAAK,UAAUsC,GAAG,UAAUC,UAAQ,IAC1D,6BAAK,6BACL,4BAAQC,QAAS1C,KAAKgB,UAAtB,WAEJ,6BACChB,KAAKsC,MAAMvB,UAAU4B,KAAI,SAACC,GACvB,GAAGA,EAAM1C,KACL,OAAO,kBAAC,EAAD,CAAOA,KAAM0C,EAAM1C,KAAMC,QAASyC,EAAMzC,QAASC,KAAMwC,EAAMlB,kB,GArErErB,aCYJwC,MAZf,WACE,OACE,yBAAK9C,UAAU,OACb,4BAAQA,UAAU,cAAlB,oBAGA,6BACA,kBAAC,EAAD,QCLN+C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF5B,SAAS6B,eAAe,W","file":"static/js/main.9acc397a.chunk.js","sourcesContent":["import React, { Component }from 'react';\r\nimport './tweet.css'\r\n\r\nclass Tweet extends Component {\r\n    render(){\r\n        return(\r\n            <div className=\"tweet\">\r\n                <label>{this.props.name}</label>\r\n                <br/>\r\n                <label>{this.props.content}</label>\r\n                <br/>\r\n                <label>{this.props.date}</label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tweet;","import React, { Component }from 'react';\r\nimport './form.css'\r\nimport Tweet from '../tweet/tweet'\r\n\r\nclass Form extends Component {\r\n\r\n    API_URL = 'https://reminiscent-browser.glitch.me/mews';\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            allTweets : []\r\n        };\r\n        this.loadAllMews();\r\n    }   \r\n\r\n    loadAllMews = () =>{\r\n        fetch(this.API_URL)\r\n            .then(res => res.json())\r\n            .then(allmews =>{\r\n                this.setState({\r\n                    allTweets : allmews\r\n                });\r\n            });\r\n    };\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        const formElements = document.querySelector('form');\r\n        const formData = new FormData(formElements);\r\n        const name = formData.get(\"name\");\r\n        const content = formData.get(\"content\");\r\n\r\n        const meow = {\r\n            name,\r\n            content,\r\n            created : new Date().toDateString()\r\n        };\r\n        fetch(this.API_URL, {\r\n            method: 'POST',\r\n            body : JSON.stringify(meow),\r\n            headers:{\r\n                'content-type' : 'application/json'\r\n            }\r\n        }).then(res=> res.json())\r\n        .then(createdMew => {\r\n            console.log(createdMew);\r\n            formElements.reset();\r\n            // formElements.style.display = 'none';\r\n            // setTimeout(()=>{\r\n            //     formElements.style.display = '';\r\n            // }, 30000)\r\n            this.loadAllMews();\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n        <div className=\"Form\">\r\n            <form>\r\n                <label>Name</label>\r\n                <br/>\r\n                <input type=\"text\" name=\"name\" id=\"name\" required/>\r\n                <br/><br/>\r\n                <label>Description</label>\r\n                <br/>\r\n                <textarea type=\"text\" name=\"content\" id=\"content\" required/>\r\n                <br/><br/>\r\n                <button onClick={this.onSubmit}>Submit</button>\r\n            </form>\r\n            <br/>\r\n            {this.state.allTweets.map((tweet)=>{\r\n                if(tweet.name)\r\n                    return <Tweet name={tweet.name} content={tweet.content} date={tweet.created}/>\r\n            })}\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Form;","import React from 'react';\nimport './App.css';\nimport Form from './components/form/form'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Twitter for cats\n      </header>\n      <hr/>\n      <Form/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}