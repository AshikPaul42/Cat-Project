{"version":3,"sources":["components/tweet/tweet.js","components/form/form.js","components/mapUsers/mapUsers.js","App.js","index.js"],"names":["Tweet","className","href","this","props","name","Date","date","toDateString","content","Component","MainForm","API_URL","loadAllMews","fetch","then","res","json","allmews","setState","allTweets","onSubmit","event","preventDefault","meow","document","querySelector","value","created","method","body","JSON","stringify","headers","state","description","console","log","dir","TextField","label","required","id","rows","PrimaryButton","onClick","map","tweet","MapUsers","getExistingLocations","locations","Map","ReactMapboxGl","accessToken","style","center","zoom","containerStyle","height","width","type","layout","length","loc","coordinates","longitude","latitude","App","LOC_URL","mylatitude","mylongitude","city","ip","success","position","coords","saveLocation","error","getLocation","geoFindMe","navigator","geolocation","getCurrentPosition","response","status","data","locData","IP","catch","err","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.48f1eb5c.chunk.js","sourcesContent":["import React, { Component }from 'react';\r\nimport './tweet.css'\r\n\r\nclass Tweet extends Component {\r\n    render(){\r\n        return(\r\n            <div className=\"col-md-3\">\r\n                <div className=\"card flex-md-row mb-4 box-shadow h-md-250 bg-dark \">\r\n                    <div className=\"card-body d-flex flex-column align-items-start\">\r\n                        <h3 className=\"mb-0\">\r\n                            <a className=\"text-light\" href=\"#\">{this.props.name}</a>\r\n                        </h3>\r\n                            <div className=\"mb-1 text-light\">{new Date(this.props.date).toDateString()}</div>\r\n                            <p className=\"card-text text-light mb-auto\">{this.props.content}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tweet;","import React, { Component }from 'react';\r\nimport './form.css';\r\nimport Tweet from '../tweet/tweet';\r\n// import {  } from 'office-ui-fabric-react/lib/TextField';\r\nimport { TextField, PrimaryButton } from 'office-ui-fabric-react';\r\n\r\nclass MainForm extends Component {\r\n\r\n    API_URL = 'https://cat-lovers-server.herokuapp.com/mews';\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            allTweets : [],\r\n            name : \"\",\r\n            description : \"\"\r\n        };\r\n        this.loadAllMews();\r\n        console.log(\"Hello\");\r\n    }   \r\n\r\n    loadAllMews = () =>{\r\n        fetch(this.API_URL)\r\n            .then(res => res.json())\r\n            .then(allmews =>{\r\n                this.setState({\r\n                    allTweets : allmews\r\n                });\r\n            });\r\n    };\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        const name = document.querySelector('#name').value;\r\n        const content = document.querySelector('#content').value;\r\n\r\n        const meow = {\r\n            name,\r\n            content,\r\n            created : new Date().toDateString()\r\n        };\r\n        fetch(this.API_URL, {\r\n            method: 'POST',\r\n            body : JSON.stringify(meow),\r\n            headers:{\r\n                'content-type' : 'application/json'\r\n            }\r\n        }).then(res=> res.json())\r\n        .then(()=> {\r\n            document.querySelector('#name').value = \"\";\r\n            document.querySelector('#content').value = \"\";\r\n            // setTimeout(()=>{\r\n            //     document.querySelector('form').style.display = '';\r\n            // }, 30000)\r\n            this.loadAllMews();\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"Form ms-Grid\" dir=\"ltr\">\r\n                <div className=\"jumbotron p-3 p-md-5 text-white rounded bg-dark\">\r\n                <div className={\"row mb-2 alignItemsDown\"}>\r\n                    <div className=\"col-md-2 col-sm-12 col-lg-2\">\r\n                        <TextField label=\"Your pet's name \" required id=\"name\"/>\r\n                    </div>\r\n                    <div className=\"col-md-8 col-sm-12 col-lg-9\">\r\n                        <TextField label=\"Describe your pet \" required id=\"content\" rows={1}/>\r\n                    </div>\r\n                    <div className=\"col-md-2 col-sm-12 col-lg-1\">\r\n                        <PrimaryButton onClick={this.onSubmit}>Submit</PrimaryButton>\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n                </div>\r\n                <div className=\"row\"> \r\n                        {this.state.allTweets.map((tweet)=>{\r\n                            if(tweet.name)\r\n                                return <Tweet name={tweet.name} content={tweet.content} date={tweet.created}/>\r\n                        })}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default MainForm;","import React, { Component }from 'react';\r\nimport './mapUsers.css'\r\nimport ReactMapboxGl, { Layer, Feature } from 'react-mapbox-gl';\r\n\r\nclass MapUsers extends Component {\r\n\r\n    API_URL = 'https://cat-lovers-server.herokuapp.com/locations';\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            locations : []\r\n        };\r\n        this.getExistingLocations();\r\n    }\r\n\r\n    getExistingLocations = () => {\r\n        fetch(this.API_URL)\r\n            .then(res => res.json())\r\n            .then(locations =>{\r\n                this.setState({ locations : locations });\r\n            });\r\n    }\r\n\r\n    render(){\r\n        const Map = ReactMapboxGl({\r\n            accessToken:'pk.eyJ1IjoiYXNoaWtwYXVsIiwiYSI6ImNrYWFwdWlqYjB1dHYzMnM5ZmhybXoweXUifQ.c-RJnUB83cyvk-o0iUnhQQ'\r\n        });\r\n        return (<div className=\"MapMain\">\r\n                <div id=\"MapBoxDiv\">\r\n                    <Map\r\n                        style=\"mapbox://styles/mapbox/dark-v10\"\r\n                        center={[77.5946, 12.9716]}\r\n                        zoom={[3]}\r\n                        containerStyle={{\r\n                            height: '720px',\r\n                            width: '100%'\r\n                        }}>\r\n                        <Layer type=\"symbol\" id=\"marker\" layout={{ 'icon-image': 'rocket-15' }}>\r\n                            {this.state.locations.length ? this.state.locations.map((loc)=>{\r\n                                return <Feature coordinates={[ loc.longitude, loc.latitude ]} />\r\n                            }) : \"\"}\r\n                        </Layer>\r\n                    </Map>\r\n                </div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default MapUsers;","import React, { Component } from 'react';\nimport './App.css';\nimport Form from './components/form/form'\nimport MapUsers from './components/mapUsers/mapUsers';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component{\n\n  LOC_URL = 'https://cat-lovers-server.herokuapp.com/locations';\n  mylatitude = \"\";\n  mylongitude = \"\";\n  city = \"\";\n  ip = \"\";\n\n  constructor(props){\n    super(props);\n    // this.getLocation();\n    this.geoFindMe();\n  }\n\n  success = (position) => {\n    this.mylongitude = position.coords.longitude;\n    this.mylatitude = position.coords.latitude;\n    this.saveLocation()\n  }\n\n  error = () => {\n    this.getLocation();\n  }\n\n  geoFindMe = () => {\n  \n    if(!navigator.geolocation) {\n     \n    } else {\n      navigator.geolocation.getCurrentPosition(this.success, this.error);\n    }\n  \n  }\n\n  saveLocation(){\n    let locData = {\n      IP : this.ip,\n      city : this.city,\n      latitude : this.mylatitude,\n      longitude : this.mylongitude\n    };\n    fetch(this.LOC_URL, {\n      method: 'POST',\n      body : JSON.stringify(locData),\n      headers:{\n          'content-type' : 'application/json'\n      }\n    }).then(res=> res.json())\n    .then((res)=> { \n      console.log(res); \n      }).catch(function(err) {\n      console.log('Fetch Error :-S', err);\n    });\n  }\n\n  getLocation = () => {\n    fetch('https://ipapi.co/json/')\n      .then((response) => {\n          if (response.status !== 200) {\n            console.log('Looks like there was a problem. Status Code: ' + response.status);\n            return;\n          }\n          response.json().then((data) => {\n            this.mylongitude = data.longitude;\n            this.mylatitude = data.latitude;\n            this.city = data.city;\n            this.ip = data.ip;\n            this.saveLocation();\n            // if(data.latitude != \"12.9721\" || data.longitude != \"77.5933\"){\n              \n          // }\n    });\n  });\n}\n\n  render(){\n    return (\n      <div className=\"App container-fluid\"> \n            <div className=\"navDark d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 border-bottom box-shadow orange\">\n              <h5 className=\"my-0 mr-md-auto font-weight-normal\">Blah Rules</h5>\n              <nav className=\"my-2 my-md-0 mr-md-3 \">\n                <a className=\"p-2 text-light\" href=\"#\">Users</a>\n                <a className=\"p-2 text-light\" href=\"#\">Porjects</a>\n                <a className=\"p-2 text-light\" href=\"#\">About</a>\n                <a className=\"p-2 text-light\" href=\"https://www.linkedin.com/in/ashik-paul-2ab793130/\">Contact</a>\n                {/* <a className=\"p-2 text-light\" href=\"#\">Support</a> */}\n              </nav>\n            </div>\n          <br/>\n        <Form/>\n        <MapUsers/>\n        <br/><br/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}