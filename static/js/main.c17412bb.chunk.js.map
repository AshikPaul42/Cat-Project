{"version":3,"sources":["components/tweet/tweet.js","components/form/form.js","components/mapUsers/mapUsers.js","App.js","index.js"],"names":["Tweet","className","this","props","name","content","date","Component","MainForm","API_URL","loadAllMews","fetch","then","res","json","allmews","setState","allTweets","onSubmit","event","preventDefault","meow","document","querySelector","value","created","Date","toDateString","method","body","JSON","stringify","headers","state","description","console","log","dir","TextField","label","required","id","rows","PrimaryButton","onClick","map","tweet","MapUsers","getExistingLocations","locations","center","zoom","width","height","loc","anchor","parseFloat","latitude","longitude","payload","offset","src","alt","App","LOC_URL","getLocation","response","status","data","locData","IP","ip","city","catch","err","href","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c17412bb.chunk.js","sourcesContent":["import React, { Component }from 'react';\r\nimport './tweet.css'\r\n\r\nclass Tweet extends Component {\r\n    render(){\r\n        return(\r\n            <div className=\"tweet\">\r\n                <label>{this.props.name}</label>\r\n                <br/>\r\n                <label>{this.props.content}</label>\r\n                <br/>\r\n                <label>{this.props.date}</label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Tweet;","import React, { Component }from 'react';\r\nimport './form.css';\r\nimport Tweet from '../tweet/tweet';\r\n// import {  } from 'office-ui-fabric-react/lib/TextField';\r\nimport { TextField, PrimaryButton } from 'office-ui-fabric-react';\r\n\r\nclass MainForm extends Component {\r\n\r\n    API_URL = 'https://cat-lovers-server.herokuapp.com/mews';\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            allTweets : [],\r\n            name : \"\",\r\n            description : \"\"\r\n        };\r\n        this.loadAllMews();\r\n        console.log(\"Hello\");\r\n    }   \r\n\r\n    loadAllMews = () =>{\r\n        fetch(this.API_URL)\r\n            .then(res => res.json())\r\n            .then(allmews =>{\r\n                this.setState({\r\n                    allTweets : allmews\r\n                });\r\n            });\r\n    };\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        const name = document.querySelector('#name').value;\r\n        const content = document.querySelector('#content').value;\r\n\r\n        const meow = {\r\n            name,\r\n            content,\r\n            created : new Date().toDateString()\r\n        };\r\n        fetch(this.API_URL, {\r\n            method: 'POST',\r\n            body : JSON.stringify(meow),\r\n            headers:{\r\n                'content-type' : 'application/json'\r\n            }\r\n        }).then(res=> res.json())\r\n        .then(()=> {\r\n            document.querySelector('#name').value = \"\";\r\n            document.querySelector('#content').value = \"\";\r\n            // setTimeout(()=>{\r\n            //     document.querySelector('form').style.display = '';\r\n            // }, 30000)\r\n            this.loadAllMews();\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"Form ms-Grid\" dir=\"ltr\">\r\n                <div className=\"jumbotron p-3 p-md-5 text-white rounded bg-dark\">\r\n                <div className={\"ms-Grid-row alignItemsDown\"}>\r\n                    <div className=\"ms-Grid-col ms-sm12 ms-md1 ms-lg1\"></div>\r\n                    <div className=\"ms-Grid-col ms-sm12 ms-md2 ms-lg2\">\r\n                        <TextField label=\"Name \" required id=\"name\"/>\r\n                    </div>\r\n                    <div className=\"ms-Grid-col ms-sm12 ms-md7 ms-lg7\">\r\n                        <TextField label=\"Description \" required id=\"content\" rows={1}/>\r\n                    </div>\r\n                    <div className=\"ms-Grid-col ms-sm12 ms-md1 ms-lg1\">\r\n                        <PrimaryButton onClick={this.onSubmit}>Submit</PrimaryButton>\r\n                    </div>\r\n                    <div className=\"ms-Grid-col ms-sm12 ms-md1 ms-lg1\"></div>\r\n                </div>\r\n                <br/>\r\n                <div className=\"ms-Grid-row\">\r\n                    <div className=\"ms-Grid-col ms-sm12 ms-md1 ms-lg1\"></div> \r\n                    <div className=\"ms-Grid-col ms-sm12 ms-md10 ms-lg10\">   \r\n                        {this.state.allTweets.map((tweet)=>{\r\n                            if(tweet.name)\r\n                                return <Tweet name={tweet.name} content={tweet.content} date={tweet.created}/>\r\n                        })}\r\n                    </div>\r\n                    <div className=\"ms-Grid-col ms-sm12 ms-md1 ms-lg1\"></div>\r\n                </div>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default MainForm;","import React, { Component }from 'react';\r\n// import * as LMap from 'leaflet';\r\nimport Map from 'pigeon-maps'\r\nimport Marker from 'pigeon-marker'\r\nimport Overlay from 'pigeon-overlay'\r\n\r\nclass MapUsers extends Component {\r\n\r\n    API_URL = 'https://cat-lovers-server.herokuapp.com/locations';\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            locations : []\r\n        };\r\n        this.getExistingLocations();\r\n    }\r\n\r\n    getExistingLocations = () => {\r\n        fetch(this.API_URL)\r\n            .then(res => res.json())\r\n            .then(locations =>{\r\n                this.setState({\r\n                    locations : locations\r\n                });\r\n                console.log(locations);\r\n            });\r\n    }\r\n\r\n    render(){\r\n        return (<div>\r\n            <Map center={[50.879, 4.6997]} zoom={3} width={1000} height={1000}>\r\n                {this.state.locations.map((loc)=>{\r\n                    return <Marker anchor={[parseFloat(loc.latitude), parseFloat(loc.longitude)]} payload={1} onClick={({ event, anchor, payload }) => {}} />\r\n                })}\r\n\r\n                <Overlay anchor={[50.879, 4.6997]} offset={[120, 79]}>\r\n                <img src='pigeon.jpg' width={240} height={158} alt='' />\r\n                </Overlay>\r\n            </Map>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default MapUsers;","import React, { Component } from 'react';\nimport './App.css';\nimport Form from './components/form/form'\nimport 'office-ui-fabric-react/dist/css/fabric.min.css';\nimport MapUsers from './components/mapUsers/mapUsers';\n\nclass App extends Component{\n\n  LOC_URL = 'https://cat-lovers-server.herokuapp.com/locations';\n\n  constructor(props){\n    super(props);\n    this.getLocation();\n  }\n\n\n\n  getLocation = () => {\n    fetch('https://ipapi.co/json/')\n      .then((response) => {\n          if (response.status !== 200) {\n            console.log('Looks like there was a problem. Status Code: ' + response.status);\n            return;\n          }\n          response.json().then((data) => {\n            let locData = {\n              IP : data.ip,\n              city : data.city,\n              latitude : data.latitude,\n              longitude : data.longitude\n            };\n            fetch(this.LOC_URL, {\n              method: 'POST',\n              body : JSON.stringify(locData),\n              headers:{\n                  'content-type' : 'application/json'\n              }\n            }).then(res=> res.json())\n            .then((res)=> { \n              console.log(res); \n            });\n        }).catch(function(err) {\n        console.log('Fetch Error :-S', err);\n      });\n    });\n}\n\n  render(){\n    return (\n      <div className=\"App container\">\n        <header className=\"blog-header py-3\">\n          <div className=\"row flex-nowrap justify-content-between align-items-center\">\n            <div className=\"col-2 pt-1\">\n              <a className=\"text-muted\" href=\"https://www.linkedin.com/in/ashik-paul-2ab793130/\">Contact</a>\n            </div>\n            <div className=\"col-6 text-center\">\n              <h3 className=\"font-weight-normal blog-header-logo text-dark\">Twitter for cats and dogs</h3>\n            </div>\n            <div className=\"col-2 d-flex justify-content-end align-items-center\"></div>\n          </div>\n        </header>\n        <hr/>\n        <Form/>\n        <MapUsers/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}